{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","cardArray","map","user","i","SearchBox","searchFieldOnChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","error","this","require","Component","App","event","setState","searchField","target","value","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,UAAKH,GAAQI,IAAG,+BAA0BL,EAA1B,cACxB,gCACE,6BAAKC,IACL,4BAAIC,WCOGI,EAbE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAClC,OACE,cAAC,EAAD,CAEEX,GAAIO,EAAOI,GAAGX,GACdC,KAAMM,EAAOI,GAAGV,KAChBC,MAAOK,EAAOI,GAAGT,OAHZK,EAAOI,GAAGX,OAOrB,OAAO,8BAAMQ,KCAAI,EAbG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBACnB,OACE,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCOHI,G,MAdA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,QAJZ,SAOGJ,EAAMK,aCSEC,E,kDAfb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,OAAO,GAHG,E,0CAMd,WACE,OAAIC,KAAKF,MAAMC,MACN,yBAGFC,KAAKT,MAAMK,a,GAdAK,EAAQ,GAAtBC,WC0DOC,E,kDAlDb,aAAe,IAAD,8BACZ,gBAiBFjB,oBAAsB,SAACkB,GACrB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAjB1C,EAAKV,MAAQ,CACXQ,YAAa,GACb1B,OAAQ,IAJE,E,qDAQd,WAAqB,IAAD,OAClB6B,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OACJ,EAAKR,SAAS,CACZzB,OAAQiC,S,oBAShB,WAAU,IAAD,OACDC,EAAed,KAAKF,MAAMlB,OAAOmC,QAAO,SAACC,GAC7C,OAAOA,EAAM1C,KACV2C,cACAC,SAAS,EAAKpB,MAAMQ,YAAYW,kBAErC,OAA4B,IAAxBH,EAAaK,OAEb,8BACE,oBAAI3C,UAAU,KAAd,uBAKF,sBAAKA,UAAU,KAAf,UACE,+CACA,cAAC,EAAD,CAAWU,oBAAqBc,KAAKd,sBACrC,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUN,OAAQkC,e,GA1CdZ,aCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9849a0c1.chunk.js","sourcesContent":["// import React from \"react\";\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5\">\r\n      <img alt={`${name}`} src={`https://robohash.org/${id}?200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  const cardArray = robots.map((user, i) => {\r\n    return (\r\n      <Card\r\n        key={robots[i].id}\r\n        id={robots[i].id}\r\n        name={robots[i].name}\r\n        email={robots[i].email}\r\n      />\r\n    );\r\n  });\r\n  return <div>{cardArray}</div>;\r\n};\r\nexport default CardList;\r\n","const SearchBox = ({ searchFieldOnChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"Search Robots\"\r\n        onChange={searchFieldOnChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","const Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        border: \"2px solid white\",\r\n        height: \"70vh\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","const { Component } = require(\"react\");\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      error: false,\r\n    };\r\n  }\r\n  render() {\r\n    if (this.state.error) {\r\n      return \"Ohhh, no, some error!!\";\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      searchField: \"\",\r\n      robots: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) =>\r\n        this.setState({\r\n          robots: users,\r\n        })\r\n      );\r\n  }\r\n\r\n  searchFieldOnChange = (event) => {\r\n    this.setState({ searchField: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const filterRobots = this.state.robots.filter((robot) => {\r\n      return robot.name\r\n        .toLowerCase()\r\n        .includes(this.state.searchField.toLowerCase());\r\n    });\r\n    if (filterRobots.length === 0) {\r\n      return (\r\n        <div>\r\n          <h1 className=\"tc\">Loading</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"tc\">\r\n          <h1>Robot Friends</h1>\r\n          <SearchBox searchFieldOnChange={this.searchFieldOnChange} />\r\n          <Scroll>\r\n            <ErrorBoundry>\r\n              <CardList robots={filterRobots} />\r\n            </ErrorBoundry>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}